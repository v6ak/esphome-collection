# Originates in https://github.com/iamjoshk/home-assistant-collection/blob/main/ESPHome/Sonicare/esphome_sonicare_ble.yaml

ble_client:
  - mac_address: ${mac}
    id: ${id}
    name: ${name}
    auto_connect: true
    on_connect:
      then:
        - lambda: |-
            id(${id}_connected) = true;
            ESP_LOGD("ble_client_lambda", "Connected to ${name}");
    on_disconnect:
      then:
        - lambda: |-
            id(${id}_connected) = false;
            ESP_LOGD("ble_client_lambda", "Disconnected from ${name}");

globals:

  - id: ${id}_connected
    type: bool
    restore_value: no 
    initial_value: 'false'

  - id: ${id}_battery_last_value
    type: int
    restore_value: yes

  - id: ${id}_toothbrush_status
    type: int
    restore_value: True

binary_sensor:

  - platform: template 
    name: ${name} connection
    id: ${id}_ble_connection
    lambda: |- 
      return id(${id}_connected); 
    device_class: connectivity

sensor:

  - platform: ble_client
    ble_client_id: ${id}
    id: ${id}_toothbrush_battery_value
    name: ${name} Battery raw
    type: characteristic
    service_uuid: 180F
    characteristic_uuid: 2A19
    notify: True
    unit_of_measurement: '%'
    device_class: battery
    filters:
      - filter_out:
        - nan
    on_value:
      then:
        - lambda: |-
            if (id(${id}_connected)) {
              if (x >= 0 && x <= 100) {
                id(${id}_battery_last_value) = x;
                ESP_LOGD("ble_sensor", "Battery value updated: %d", id(${id}_battery_last_value));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid battery value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Battery value not updated because the device is not connected");
            }


  - platform: template
    id: ${id}_toothbrush_battery
    name: ${name} Battery
    lambda: |-
      return id(${id}_battery_last_value); 
    device_class: battery
    unit_of_measurement: '%'
    accuracy_decimals: 0



  - platform: ble_client
    ble_client_id: ${id}
    id: ${id}_toothbrush_active_seconds
    name: ${name} Active Time
    type: characteristic
    service_uuid: 477ea600-a260-11e4-ae37-0002a5d50002
    characteristic_uuid: 477ea600-a260-11e4-ae37-0002a5d54090
    notify: True  # event-driven
    update_interval: never  # prevent polling, as the state is already updated by events
    device_class: duration
    accuracy_decimals: 0
    unit_of_measurement: s
    filters:
      - filter_out:
        - nan  # We get NaN when disconnected.

  - platform: ble_client
    ble_client_id: ${id}
    id: ${id}_toothbrush_stat
    name: ${name} Handle Status raw
    type: characteristic
    service_uuid: 477ea600-a260-11e4-ae37-0002a5d50001
    characteristic_uuid: 477ea600-a260-11e4-ae37-0002a5d54010
    notify: True
    filters:
      - filter_out:
        - nan
    on_value:
      then:
        - lambda: |-
            if (id(${id}_connected)) {
              if (x >= 0 && x <= 7) {
                id(${id}_toothbrush_status) = x;
                ESP_LOGD("ble_sensor", "Handle Status Updated: %d", id(${id}_toothbrush_status));
              } else {
                ESP_LOGD("ble_sensor", "Received invalid Status value: %d", x);
              }
            } else {
              ESP_LOGD("ble_sensor", "Handle Status not updated because the device is not connected");
            }


  - platform: template
    id: ${id}_handle_status
    name: ${name} Handle Status
    lambda: |-
      return id(${id}_toothbrush_status);
    accuracy_decimals: 0

